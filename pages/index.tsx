import Head from "next/head";
import { GetServerSideProps, InferGetServerSidePropsType } from "next";

import * as configcat from "configcat-js-ssr";
import UserCard from "./components/UserCard";
import type { ApiResponse, User } from "@/pages/types/ApiResponse";

const getRandomUser = async (): Promise<ApiResponse> => {
  const res = await fetch("https://randomuser.me/api/");
  const data = await res.json();
  return data;
};

export const getServerSideProps = (async () => {
  // Create the ConfigCat client with your SDK Key
  const configCatClient = configcat.getClient("YOUR-SDK-KEY");

  // Get your setting value
  const randomUserFeature = await configCatClient.getValueAsync(
    "randomUserFeature",
    false
  );

  console.log(randomUserFeature, "ths flag is");

  // Get a random user
  const randomUser = await getRandomUser();

  return {
    props: {
      randomUser: randomUser.results[0],
      randomUserFeature,
    },
  };
}) satisfies GetServerSideProps<{
  randomUser: User;
  randomUserFeature: boolean;
}>;

export default function Home({
  randomUser,
  randomUserFeature,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  return (
    <>
      <Head>
        <title>Feature Flags in Next.js Sample</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {randomUserFeature ? (
          <UserCard user={randomUser}></UserCard>
        ) : (
          <p>Feature has been toggled off</p>
        )}
      </main>
    </>
  );
}
